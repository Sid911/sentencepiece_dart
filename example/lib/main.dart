import 'dart:developer';

import 'package:flutter/material.dart';
import 'dart:async';

import 'package:flutter/services.dart' show PlatformException;
import 'package:sentencepiece_dart/sentencepiece_dart.dart';
// ignore: unused_import
import 'package:tflite_flutter/tflite_flutter.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  String _platformVersion = 'Unknown';
  String stuff = 'Plugin example app';
  bool show = false;
  late String platformVersion;
  late String modelPath;
  late Sentencepiece? spm;
  @override
  void initState() {
    super.initState();
    initPlatformState();
  }

  // Platform messages are asynchronous, so we initialize in an async method.
  Future<void> initPlatformState() async {
    // await Sentencepiece.saveAssetToApplicationDirectory(
    //   inputAssetPath: "assets/30kclean.model",
    //   relativeOutputPath: "30kclean.model",
    // ).then((value) {
    //   setState(() {
    //     modelPath = value;
    //     spm = Sentencepiece(value);
    //     show = true;
    //   });
    // });
    //  albert thingy

    // ignore: unused_local_variable
    final List<String> sentences = [
      "My phone fell down the building".toLowerCase(),
      "It is warm today".toLowerCase(),
      "Today is a hot day".toLowerCase(),
      "I went to grandpa's home".toLowerCase(),
      "I found some old tools".toLowerCase(),
      "Where is my phone?".toLowerCase(),
      "How old are you?".toLowerCase(),
      "What is your age?".toLowerCase(),
      "I am 16 years old".toLowerCase()
    ];

    /// Note : This sentence does not represent a normal sentence, a normal sentence needs to be preprocessed.
    /// 1. convert to lowercase (sentencepiece requires this)
    /// 2. remove punctuation marks
    /// 3. separate sentences

    // get the encodings note (debug mode builds take 20x more time to encode than even profile mode)
    // var res = spm!.preprocessForAlBert("this is a test", "[CLS]", "[SEP]");
    // // start tflite interpreter
    // final options = InterpreterOptions()..useNnApiForAndroid = true;
    // final interpreter = await Interpreter.fromAsset(
    //     'lite-model_albert_lite_base_squadv1_metadata_1.tflite',
    //     options: options);
    // final outputTensors = interpreter.getOutputTensors();
    // interpreter.allocateTensors();
    // final inputTensors = interpreter.getInputTensors();
    // // Sets the features to
    // inputTensors[0].setTo(res);
    // // Run the model
    // interpreter.invoke();
    // stopwatch.stop();
    // log("time taken for model to run : ${stopwatch.elapsedMilliseconds}");
    //
    // final result = outputTensors[0].data.buffer.asFloat32List().toList();
    // log(result.toString());
    const String ibmSen = '''
    IBM produces and sells computer hardware, middleware and software, and provides hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most annual U.S. patents generated by a business (as of 2020) for 28 consecutive years.[8] Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM). The IBM mainframe, exemplified by the System/360, was the dominant computing platform during the 1960s and 1970s.

IBM has continually shifted business operations aimed at focusing on higher-value, more profitable markets. This includes spinning off printer manufacturer Lexmark in 1991 and the sale of personal computer (ThinkPad/ThinkCentre) and x86-based server businesses to Lenovo (in 2005 and 2014, respectively), and acquiring companies such as PwC Consulting (2002), SPSS (2009), The Weather Company (2016), and Red Hat (2019). In 2015, IBM announced that it would go "fabless", continuing to design semiconductors, but offloading manufacturing to GlobalFoundries, and in 2020, the company announced the spin-off of the Managed Infrastructure Services unit of its Global Technology Services division, with expected completion by the end of 2021.

Nicknamed Big Blue, IBM is one of 30 companies included in the Dow Jones Industrial Average and one of the world's largest employers, with over 345,000 employees as of 2020. At least 70% of IBM employees are based outside the United States, and the country with the largest number of IBM employees is India.[9] IBM employees have been awarded five Nobel Prizes, six Turing Awards, ten National Medals of Technology (USA) and five National Medals of Science (USA).
''';
    final replacement = ibmSen.replaceAll(
        RegExp(r'(\[.*?\])|(\(.*?\))', caseSensitive: false), '');
    final List<String> ibmSplits =
        replacement.split(RegExp(r'(\.(\s+|\n+|$)(?!([a-z]|\d)))'));
    final tokenizer = Tokenizer();
    await tokenizer.loadVocabFile("assets/vocab.txt");
    Stopwatch stopwatch = Stopwatch()..start();
    final result = tokenizer.tokenize(inputTexts: ibmSplits);
    stopwatch.stop();
    log(stopwatch.elapsedMilliseconds.toString());
    log(result.toString());
    try {
      platformVersion = await SentencepieceDartInterface.platformVersion ??
          'Unknown platform version';
    } on PlatformException {
      platformVersion = 'Failed to get platform version.';
    }
    // If the widget was removed from the tree while the asynchronous platform
    // message was in flight, we want to discard the reply rather than calling
    // setState to update our non-existent appearance.
    if (!mounted) return;

    setState(() {
      _platformVersion = platformVersion;
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: const Text('Plugin example app'),
        ),
        body: Center(
          child: Text(_platformVersion),
        ),
      ),
    );
  }
}
